!function(){"use strict";!function(){const t=new Image;t.src="./images/splash.png";class i{constructor(t,i,s,h,e){this.ctx=t,this.CANVAS_WIDTH=i,this.CANVAS_HEIGHT=s,this.posX=h,this.posY=e,this.collisionH=404,this.collisionW=395,this.frameX=0,this.incrementer=0,this.animate()}animate(){this.ctx.drawImage(t,this.frameX*this.collisionW,this.collisionH,this.collisionW,this.collisionH,this.posX,this.posY,this.collisionW/3,this.collisionH/3),this.incrementer%10==0&&(this.frameX<7&&this.frameX++,7===this.frameX&&(this.frameX=0)),this.incrementer++}update(){this.posX+=5}}const s=new Image;s.src="./images/newHenry.png";class h{constructor(t,i,s){this.name="Henry",this.ctx=s,this.CANVAS_WIDTH=t,this.CANVAS_HEIGHT=i,this.henryWidth=527,this.henryHeight=212,this.frameX=1,this.incrementer=0,this.divisor=3,this.y=250,this.x=575,this.addListeners()}animateHenry(){this.ctx.drawImage(s,527*this.frameX,212,527,212,this.x,this.y,this.henryWidth/3,this.henryHeight/3),this.incrementer%20==0&&(this.frameX<4&&this.frameX++,4===this.frameX&&(this.frameX=0)),this.incrementer++}moveHorizontallyLeft(){this.x>0?this.x--:this.x=0,requestAnimationFrame(this.moveHorizontallyLeft.bind(this))}moveHorizontallyRight(){this.x<600?this.x++:this.x=600,requestAnimationFrame(this.moveHorizontallyRight.bind(this))}moveVerticallyUp(){this.y>0?this.y--:this.y=0,requestAnimationFrame(this.moveVerticallyUp.bind(this))}moveVerticallyDown(){this.y<450?this.y++:this.y=450,requestAnimationFrame(this.moveVerticallyDown.bind(this))}addListeners(){window.addEventListener("keydown",(t=>{t.preventDefault(),"ArrowLeft"===t.key?this.moveHorizontallyLeft():"ArrowRight"===t.key?this.moveHorizontallyRight():"ArrowUp"===t.key?this.moveVerticallyUp():"ArrowDown"===t.key&&this.moveVerticallyDown()}))}}const e=new Image;e.src="./images/krillcloud.png";class a{constructor(t,i,s,h,e){this.ctx=s,this.CANVAS_WIDTH=t,this.CANVAS_HEIGHT=i,this.width=115,this.height=71,this.frameX=1,this.incrementer=0,this.y=e,this.x=h,this.scroll=2,this.divisor=2.3,this.name="krill"}animateKrill(){this.ctx.drawImage(e,this.frameX*this.width,this.height,this.width,this.height,this.x,this.y,this.width,this.height),this.incrementer%20==0&&(this.frameX<5&&this.frameX++,5===this.frameX&&(this.frameX=0)),this.incrementer++}updateKrillPos(){this.x+=this.scroll}}const n=new Image;n.src="./images/background.png";class r{constructor(t,i,s){this.ctx=s,this.CANVAS_WIDTH=t,this.CANVAS_HEIGHT=i,this.x=0,this.y=0,this.scroll=2}animateBackground(){this.ctx.clearRect(0,0,this.CANVAS_WIDTH,this.CANVAS_HEIGHT),this.ctx.fillRect(0,0,800,600),this.ctx.drawImage(n,this.x,this.y,this.CANVAS_WIDTH,this.CANVAS_HEIGHT),this.ctx.drawImage(n,this.x-this.CANVAS_WIDTH+2,this.y,this.CANVAS_WIDTH,this.CANVAS_HEIGHT)}updatePosition(){this.x+=this.scroll,this.x>this.CANVAS_WIDTH&&(this.x=0)}}let o=0,l=Math.floor(4500*Math.random()+3500),c=[];class m{constructor(t,i,s,h,e){this.ctx=s,this.CANVAS_WIDTH=t,this.CANVAS_HEIGHT=i,this.frameX=1,this.incrementer=0,this.x=h,this.y=e,this.scroll=2}handleObstacle(t,i){if(o>l){let t=Math.floor(Math.random()*(CANVAS_HEIGHT-100)+0);c.push(new this.handleObstacle(CANVAS_WIDTH,CANVAS_HEIGHT,this.ctx,-10,t)),o=0}else o+=t;c.forEach((t=>{t.animate(),t.updatePos()}))}updatePos(){this.x+=this.scroll}}const d=new Image;d.src="./images/kelp.png";class g extends m{constructor(t,i,s,h,e){super(t,i,s,h,e),this.width=70,this.height=112,this.divisor=1.5,this.name="kelp"}animate(){this.ctx.drawImage(d,this.frameX*this.width,this.height,this.width,this.height,this.x,this.y,this.width,1.5*this.height),this.incrementer%20==0&&(this.frameX<7&&this.frameX++,7===this.frameX&&(this.frameX=0)),this.incrementer++}}const f=new Image;f.src="./images/rock.png";class x extends m{constructor(t,i,s,h,e){super(t,i,s,h,e),this.width=100,this.height=400,this.divisor=1,this.name="rock"}animate(){this.ctx.drawImage(f,this.x,300,221,278)}}const u=new Image;u.src="./images/otherwhale.png";class w extends m{constructor(t,i,s,h,e){super(t,i,s,h,e),this.width=360,this.height=105,this.divisor=2,this.name="whale"}animate(){this.ctx.drawImage(u,this.frameX*this.width,this.height,this.width,this.height,this.x,this.y,this.width/1.2,this.height/1.2),this.incrementer%20==0&&(this.frameX<4&&this.frameX++,4===this.frameX&&(this.frameX=0)),this.incrementer++}}const y=new Image;y.src="./images/trash.png";class p extends m{constructor(t,i,s,h,e,a){super(t,i,s,h,e),this.width=159,this.height=205,this.frame=1,this.trashIdx=a,this.divisor=9,this.name="trash"}animate(){0===this.trashIdx?this.ctx.drawImage(y,this.width,0*this.height,this.width,this.height,this.x,this.y,this.width/4,this.height/5):1===this.trashIdx?this.ctx.drawImage(y,this.width,1*this.height,this.width,this.height,this.x,this.y,this.width/4,this.height/5):this.ctx.drawImage(y,this.width,2*this.height,this.width,this.height,this.x,this.y,this.width/4,this.height/5),this.incrementer%25==0&&(this.frame<9&&this.frame++,9===this.frame&&(this.frame=0)),this.incrementer++}updateTrashPos(){this.x+=this.scroll,this.y+=1}}const A=new Image;A.src="./images/sub.png";class H extends m{constructor(t,i,s,h,e){super(t,i,s,h,e),this.width=240,this.height=220,this.divisor=3.5,this.name="submarine"}animate(){this.ctx.drawImage(A,this.frameX*this.width,this.height,this.width,this.height,this.x,this.y,this.width/2.5,this.height/2.5),this.incrementer%20==0&&(this.frameX<6&&this.frameX++,6===this.frameX&&(this.frameX=0)),this.incrementer++}}const I=new Image;I.src="./images/fishingnet.png";class b extends m{constructor(t,i,s,h,e){super(t,i,s,h,e),this.width=111,this.height=116,this.divisor=1,this.name="net"}animate(){this.ctx.drawImage(I,this.frameX*this.width,this.height,this.width,this.height,this.x,this.y,1.2*this.width,1.2*this.height),this.incrementer%20==0&&(this.frameX<6&&this.frameX++,6===this.frameX&&(this.frameX=0)),this.incrementer++}}const X=new Image;X.src="./images/crab.png";class v extends m{constructor(t,i,s,h,e){super(t,i,s,h,e),this.width=128,this.height=124,this.divisor=1,this.name="crab"}animate(){this.ctx.drawImage(X,this.frameX*this.width,this.height,this.width,this.height,this.x,this.y,this.width/2,this.height/2),this.incrementer%10==0&&(this.frameX<6&&this.frameX++,6===this.frameX&&(this.frameX=0)),this.incrementer++}updateCrab(){this.x+=3}}(new Image).src="./images/background.png";const E=800,k=600;let T=0;const M=[],C=[];let S=0,V=0;const L=[];let N=0,W=0;const _=[];let G=0;const K=[];let O=0;const D=[];let P=0;const B=[];let R=0;const z=[];let U=[],F=[];const q=document.getElementById("game-canvas").getContext("2d");new class{constructor(t){this.ctx=t,this.henry=new h(E,k,t),this.background=new r(E,k,t),this.krillLbs=0,this.timer=200,this.winningKrillEaten=3e3,this.collisions=[],this.health=500,this.timer=0,this.backgroundAudio=document.getElementById("background-music"),this.startAnimation=!1,this.gameStarted=!1,this.gameOverVar=!1,this.addMuteAudioButton(),this.addModalButtons(),this.startGame(),this.pauseGame()}startGame(){let t=document.getElementById("startImage"),i=document.getElementById("mute");window.addEventListener("keydown",(()=>{i.classList.remove("hidden"),this.gameStarted=!0,this.backgroundAudio.play(),t.style.display="none",this.animate(0)}),{once:!0})}pauseGame(){window.addEventListener("keydown",(t=>{32==t.keyCode&&!0===this.startAnimation&&!0===this.gameStarted?this.startAnimation=!1:this.startAnimation=!0}))}play(){this.ctx.font="bold 25px copperplate",this.ctx.fillStyle="black",this.ctx.fillText("Health Points:",340,30,150),this.addHealthColor(),this.ctx.fillText(`${this.health}`,500,30,150),this.addKrillToEat(),this.checkCollisions(),this.handleCollisionAnimations(),this.endOfGame()}addModalButtons(){const t=document.getElementById("open-instructions"),i=document.getElementById("close-button"),s=document.getElementById("modal");t.addEventListener("click",(()=>{s.classList.add("active")})),i.addEventListener("click",(()=>{s.classList.remove("active")}))}addKrillToEat(){let t=this.winningKrillEaten-this.krillLbs;this.ctx.fillStyle="black",this.ctx.fillText("Eat:",20,30,50),this.ctx.fillStyle=t>=2500?"red":t<2500&&t>1e3?"yellow":"green",this.ctx.fillText(`${t}`,80,30,150),this.ctx.fillStyle="black",this.ctx.fillText("more lbs of Krill!",150,30,175)}addHealthColor(){return this.health>=350?this.ctx.fillStyle="green":this.health>150&&this.health<350?this.ctx.fillStyle="yellow":this.ctx.fillStyle="red"}addMuteAudioButton(){let t=document.getElementById("mute");t.addEventListener("click",(()=>{"Unmute"===t.innerHTML?(this.backgroundAudio.play(),t.innerHTML="Mute"):(this.backgroundAudio.pause(),t.innerHTML="Unmute")}))}checkCollisions(){if(this.collisions.length)for(let t=0;t<this.collisions.length;t++){if(this.collisions[t]instanceof a){this.incrementKrillEaten(),this.increaseHenrySize(),this.incrementHealth();let i=M.indexOf(this.collisions[t]);i>=0&&M.splice(i,1)}else{if(this.collisions[t]instanceof g){this.collisions.shift();continue}if(this.collisions[t]instanceof v){this.collisions.shift();continue}if(this.collisions[t]){this.decrementHealth();let s=(this.henry.x+(this.collisions[t].x+this.collisions[t].width/2))/2,h=(this.henry.y+this.collisions[t].y)/2;F.push(new i(this.ctx,E,k,s,h))}}this.collisions.shift()}}handleCollisionAnimations(){F.forEach((t=>{t.animate(),t.update()}))}endOfGame(){this.gameOver()&&(this.winner()?(this.ctx.font="bold 50px copperplate",this.textAlign="center",this.ctx.fillText("Congratulations, you won!",110,200,600),this.ctx.fillText("Henry is ready for",110,270,600),this.ctx.fillText("a successful migration!",110,330,600),this.gameOverVar=!0):this.gameOver()&&(this.health=0,this.ctx.font="bold 50px copperplate",this.ctx.fillText("     Oh no, Henry can't migrate! ",100,260,600),this.ctx.fillText("Click the button below to try again!",100,300,640),this.gameOverVar=!0))}increaseHenrySize(){this.henry.henryWidth*=1.02,this.henry.henryHeight*=1.02}winner(){if(this.krillLbs>=this.winningKrillEaten)return!0}gameOver(){return this.krillLbs>=this.winningKrillEaten||this.health<=0}incrementKrillEaten(){this.krillLbs+=150}decrementHealth(){this.health-=100}incrementHealth(){this.health+=10}animate(t){if(requestAnimationFrame(this.animate.bind(this)),this.gameOverVar)window.cancelAnimationFrame(this.animate);else if(this.startAnimation){const i=t-T;T=t,this.ctx.clearRect(0,0,E,k),this.background.animateBackground(),this.background.updatePosition(),this.henry.animateHenry(),this.addKrill(i),this.addKelp(i),this.addRocks(i),this.addOtherWhales(i),this.addTrash(i),this.addSubs(i),this.addNet(i),this.addCrab(i),this.obstacleArray(),this.collisionWithObject(),this.play()}else!1===this.startAnimation&&!0===this.gameStarted&&(this.ctx.font="bold 35px copperplate",this.ctx.fillStyle="#ffca66",this.ctx.fillText("              Game paused",170,280,600),this.ctx.fillText("Press space bar to continue",170,340,600),window.cancelAnimationFrame(this.animate))}obstacleArray(){return U=M.concat(D).concat(_).concat(K).concat(C).concat(L).concat(B),U}collisionWithObject(){for(let t=0;t<U.length;t++)U[t].x<700&&this.henry.x<700&&U[t].y+U[t].height/U[t].divisor>=this.henry.y&&U[t].y<=this.henry.y+this.henry.henryHeight/this.henry.divisor&&this.henry.x+this.henry.henryWidth/this.henry.divisor>=U[t].x&&this.henry.x<=U[t].x+U[t].width/U[t].divisor&&U[t].name!==U[t].name.toUpperCase()&&(U[t].name=U[t].name.toUpperCase(),this.collisions.push(U[t]));return!1}addKrill(t){let i=Math.floor(4500*Math.random()+3500);if(S>i){let t=Math.floor(500*Math.random()+0);M.push(new a(E,k,this.ctx,-10,t)),S=0}else S+=t;M.forEach((t=>{t.animateKrill(),t.updateKrillPos(),t.x>1e3&&M.shift()}))}addKelp(t){let i=Math.floor(9e5*Math.random());V>i?(C.push(new g(E,k,this.ctx,-10,385)),V=0):V+=t,C.forEach((t=>{t.animate(),t.updatePos(),t.x>1100&&C.shift()}))}addRocks(t){let i=Math.floor(6e6*Math.random());N>i?(L.push(new x(E,k,this.ctx,-100,385)),N=0):N+=t,L.forEach((t=>{t.animate(),t.updatePos(),t.x>E&&L.shift()}))}addOtherWhales(t){let i=Math.floor(9e6*Math.random()),s=Math.floor(260*Math.random()+0);W>i?(_.push(new w(E,k,this.ctx,-30,s)),W=0):W+=t,_.forEach((t=>{t.animate(),t.updatePos(),t.x>E&&_.shift()}))}addTrash(t){let i=Math.floor(8e6*Math.random()),s=Math.floor(200*Math.random()+0),h=Math.floor(3*Math.random());G>i?(K.push(new p(E,k,this.ctx,s,0,h)),G=0):G+=t,K.forEach((t=>{t.animate(),t.updateTrashPos(),t.x>E&&K.shift()}))}addSubs(t){let i=Math.floor(5e7*Math.random()),s=Math.floor(225*Math.random()+0);O>i?(D.push(new H(E,k,this.ctx,0,s)),O=0):O+=t,D.forEach((t=>{t.animate(),t.updatePos(),t.x>900&&D.shift()}))}addNet(t){let i=Math.floor(1e7*Math.random()),s=Math.floor(225*Math.random()+0);P>i?(B.push(new b(E,k,this.ctx,s,-5)),P=0):P+=t,B.forEach((t=>{t.animate(),t.updatePos(),t.x>900&&B.shift()}))}addCrab(t){let i=Math.floor(1e6*Math.random());R>i?(z.push(new v(E,k,this.ctx,-100,525)),R=0):R+=t,z.forEach((t=>{t.animate(),t.updateCrab(),t.x>900&&z.shift()}))}}(q)}()}();
//# sourceMappingURL=main.js.map