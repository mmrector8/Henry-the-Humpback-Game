{"version":3,"file":"main.js","mappings":"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","sources":["webpack://henryhumpback/./src/scripts/collision.js","webpack://henryhumpback/./src/scripts/henry.js","webpack://henryhumpback/./src/scripts/krill.js","webpack://henryhumpback/./src/scripts/background.js","webpack://henryhumpback/./src/scripts/obstacles.js","webpack://henryhumpback/./src/scripts/kelp.js","webpack://henryhumpback/./src/scripts/rock.js","webpack://henryhumpback/./src/scripts/whale.js","webpack://henryhumpback/./src/scripts/trash.js","webpack://henryhumpback/./src/scripts/submarine.js","webpack://henryhumpback/./src/scripts/net.js","webpack://henryhumpback/./src/scripts/crab.js","webpack://henryhumpback/./src/scripts/game.js","webpack://henryhumpback/./src/index.js"],"sourcesContent":["const collision = new Image();\ncollision.src = './images/splash.png'\n\nexport default class Collision{\n    constructor(ctx, CANVAS_WIDTH, CANVAS_HEIGHT, posX, posY){\n        this.ctx = ctx;\n        this.CANVAS_WIDTH = CANVAS_WIDTH;\n        this.CANVAS_HEIGHT = CANVAS_HEIGHT;\n        this.posX = posX;\n        this.posY = posY;\n        this.collisionH = 404;\n        this.collisionW = 395;\n        this.frameX = 0;\n        this.incrementer = 0;\n        this.animate();\n    }\n\n    animate(){\n            this.ctx.drawImage(collision, (this.frameX * this.collisionW), this.collisionH, this.collisionW, this.collisionH, this.posX, this.posY, this.collisionW/3, this.collisionH/3)\n            if (this.incrementer % 10 === 0) {\n                if (this.frameX < 7) {\n                    this.frameX++;\n                } if (this.frameX === 7) {\n                    this.frameX = 0;\n                }\n            }\n            this.incrementer++\n    }\n\n    update(){\n        this.posX += 5\n    }\n       \n}","const henry = new Image();\nhenry.src = './images/newHenry.png'\n\n\nexport default class Henry {\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx){\n        this.name = \"Henry\";\n        this.ctx = ctx;\n        this.CANVAS_WIDTH = CANVAS_WIDTH;\n        this.CANVAS_HEIGHT = CANVAS_HEIGHT;\n        this.henryWidth = 527;\n        this.henryHeight = 212;\n        this.frameX= 1;\n        this.incrementer =0;\n        this.divisor = 3;\n        this.y = 250;\n        this.x =575;\n        this.addListeners();\n    }\n\n    animateHenry() {\n        this.ctx.drawImage(henry, (this.frameX * 527), 212, 527, 212, this.x, this.y, this.henryWidth/3, this.henryHeight/3)\n        if (this.incrementer % 20 === 0) {\n            if (this.frameX < 4) {\n                this.frameX++;\n            } if (this.frameX === 4) {\n                this.frameX = 0;\n            }\n        }\n       this.incrementer++\n    }\n\n    moveHorizontallyLeft(){\n        if(this.x > 0){\n            this.x--;\n        }else{\n            this.x = 0;\n        }\n        requestAnimationFrame(this.moveHorizontallyLeft.bind(this));\n    }\n\n    moveHorizontallyRight() {\n        if (this.x <600) {\n            this.x++;\n        } else {\n            this.x = 600;\n        }\n    requestAnimationFrame(this.moveHorizontallyRight.bind(this));\n    }\n\n    moveVerticallyUp(){\n        if (this.y > 0) {\n            this.y--;\n        } else {\n            this.y = 0;\n        }\n        requestAnimationFrame(this.moveVerticallyUp.bind(this));\n    }\n\n    moveVerticallyDown() {\n        if (this.y < 450) {\n            this.y++;\n        } else {\n            this.y = 450;\n        }\n        requestAnimationFrame(this.moveVerticallyDown.bind(this));\n    }\n\n    addListeners(){\n        window.addEventListener(\"keydown\", (e)=>{\n            e.preventDefault();\n            if(e.key === \"ArrowLeft\"){\n                this.moveHorizontallyLeft();\n            } else if (e.key === \"ArrowRight\") {\n                this.moveHorizontallyRight();\n            } else if(e.key === \"ArrowUp\"){\n                this.moveVerticallyUp();\n            }else if(e.key === \"ArrowDown\"){\n                this.moveVerticallyDown();\n            }\n        });\n    }\n\n}","const krill = new Image();\nkrill.src = './images/krillcloud.png'\n\nexport default class Krill {\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y){\n        this.ctx = ctx;\n        this.CANVAS_WIDTH = CANVAS_WIDTH;\n        this.CANVAS_HEIGHT = CANVAS_HEIGHT;\n        this.width = 115;\n        this.height = 71;\n        this.frameX = 1;\n        this.incrementer = 0;\n        this.y = y;\n        this.x = x;\n        this.scroll = 2;\n        this.divisor = 2.3;\n        this.name = 'krill';\n    }\n\n    animateKrill(){\n        this.ctx.drawImage(krill, (this.frameX * this.width), this.height, this.width, this.height, this.x, this.y, this.width, this.height);\n         if (this.incrementer % 20 === 0) {\n            if (this.frameX < 5) {\n                this.frameX++;\n            } if (this.frameX ===5) {\n                this.frameX =0;\n            }\n        }\n        this.incrementer++\n    }\n\n    updateKrillPos(){\n        this.x += this.scroll;\n\n    }\n    \n}\n","const background = new Image();\nbackground.src = './images/background.png'\n\nexport default class Background {\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx){\n        this.ctx = ctx;\n        this.CANVAS_WIDTH = CANVAS_WIDTH;\n        this.CANVAS_HEIGHT = CANVAS_HEIGHT;\n        this.x = 0\n        this.y = 0\n        this.scroll = 2\n    }\n\n    animateBackground(){\n        this.ctx.clearRect(0, 0, this.CANVAS_WIDTH, this.CANVAS_HEIGHT);\n        this.ctx.fillRect(0, 0, 800, 600);\n        this.ctx.drawImage(background, this.x, this.y, this.CANVAS_WIDTH, this.CANVAS_HEIGHT)\n        this.ctx.drawImage(background, this.x - this.CANVAS_WIDTH + 2, this.y, this.CANVAS_WIDTH, this.CANVAS_HEIGHT)\n    }\n\n    updatePosition(){\n        this.x += this.scroll;\n        if(this.x > this.CANVAS_WIDTH) this.x = 0;\n    }\n}","let LAST_TIME = 0;\nlet TIMER = 0;\nlet INTERVAL = Math.floor(Math.random() * 4500 + 3500);\nlet OBSTACLE_ARR  = []\n\nexport default class Obstacle {\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y){\n        this.ctx = ctx;\n        this.CANVAS_WIDTH = CANVAS_WIDTH;\n        this.CANVAS_HEIGHT = CANVAS_HEIGHT;\n        this.frameX = 1;\n        this.incrementer = 0;\n        this.x = x;\n        this.y = y\n        this.scroll = 2;\n    }\n\n    handleObstacle(deltaTime, animate) {\n        if (TIMER > INTERVAL) {\n            let randomY = Math.floor(Math.random() * (CANVAS_HEIGHT - 100) + 0)\n            OBSTACLE_ARR.push(new this.handleObstacle(CANVAS_WIDTH, CANVAS_HEIGHT, this.ctx, -10, randomY))\n            TIMER = 0;\n        } else {\n            TIMER += deltaTime;\n        }\n        OBSTACLE_ARR.forEach((obstacle) => {\n            obstacle.animate();\n            obstacle.updatePos();\n        })\n    }\n\n    updatePos() {\n        this.x += this.scroll;\n    }\n}\n","import Obstacle from \"./obstacles.js\"\nconst kelp = new Image()\nkelp.src = \"./images/kelp.png\"\n\nexport default class Kelp extends Obstacle{\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y){\n        super(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y);\n        this.width = 70;\n        this.height = 112;\n        this.divisor = 1.5;\n        this.name = 'kelp'\n    }\n    animate(){\n        this.ctx.drawImage(kelp, (this.frameX * this.width), this.height, this.width, this.height, this.x, this.y, this.width, this.height *1.5);\n        if (this.incrementer % 20 === 0) {\n            if (this.frameX < 7) {\n                this.frameX++;\n            } if (this.frameX === 7) {\n                this.frameX = 0;\n            }\n        }\n        this.incrementer++\n    }\n}","import Obstacle from \"./obstacles.js\"\nconst rock = new Image()\nrock.src = \"./images/rock.png\"\n\nexport default class Rock extends Obstacle {\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y) {\n        super(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y);\n        this.width = 100;\n        this.height = 400;\n        this.divisor = 1;\n        this.name = 'rock';\n    }\n\n    animate(){\n       this.ctx.drawImage(rock, this.x , 300, 221, 278)\n    }\n}","import Obstacle from \"./obstacles.js\"\n\nconst otherWhale = new Image();\notherWhale.src = \"./images/otherwhale.png\"\n\nexport default class Whale extends Obstacle{\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y){\n        super(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y)\n        this.width = 360;\n        this.height = 105;\n        this.divisor = 2;\n        this.name = 'whale'\n    }\n\n    animate(){\n        this.ctx.drawImage(otherWhale, (this.frameX * this.width), this.height, this.width, this.height, this.x, this.y, this.width/1.2, this.height/1.2);\n        if (this.incrementer % 20 === 0) {\n            if (this.frameX < 4) {\n                this.frameX++;\n            } if (this.frameX === 4) {\n                this.frameX = 0;\n            }\n        }\n        this.incrementer++\n    }\n}","import Obstacle from \"./obstacles.js\"\nconst trash = new Image()\ntrash.src = \"./images/trash.png\"\n\nexport default class Trash extends Obstacle {\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y, num) {\n        super(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y);\n        this.width = 159;\n        this.height = 205;\n        this.frame = 1;\n        this.trashIdx = num\n        this.divisor = 9;\n        this.name = 'trash'\n    }\n    animate() {\n        if (this.trashIdx === 0){\n            this.ctx.drawImage(trash, (this.width), (0 * this.height), this.width, this.height, this.x, this.y, this.width / 4, this.height / 5);\n        } else if (this.trashIdx === 1){\n            this.ctx.drawImage(trash, (this.width), (1 * this.height), this.width, this.height, this.x, this.y, this.width / 4, this.height / 5);\n        } else{\n            this.ctx.drawImage(trash, (this.width), (2* this.height), this.width, this.height, this.x, this.y, this.width / 4, this.height / 5);\n        }\n        if (this.incrementer % 25 === 0) {\n            if (this.frame < 9) {\n                this.frame++;\n            } if (this.frame === 9) {\n                this.frame = 0;\n            }\n        }\n        this.incrementer++\n    }\n\n    updateTrashPos(){\n        this.x += this.scroll\n        this.y += 1\n    }\n}","import Obstacle from \"./obstacles.js\"\n\nconst sub = new Image();\nsub.src = \"./images/sub.png\"\n\nexport default class Submarine extends Obstacle {\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y) {\n        super(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y)\n        this.width = 240;\n        this.height = 220;\n        this.divisor = 3.5;\n        this.name = 'submarine';\n    }\n\n    animate() {\n        this.ctx.drawImage(sub, (this.frameX * this.width), this.height, this.width, this.height, this.x, this.y, this.width/2.5, this.height/2.5);\n        if (this.incrementer % 20 === 0) {\n            if (this.frameX < 6) {\n                this.frameX++;\n            } if (this.frameX === 6) {\n                this.frameX = 0;\n            }\n        }\n        this.incrementer++\n    }\n}","import Obstacle from \"./obstacles.js\"\nconst net = new Image()\nnet.src = \"./images/fishingnet.png\"\n\n\nexport default class Net extends Obstacle{\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y) {\n        super(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y);\n        this.width = 111;\n        this.height = 116;\n        this.divisor = 1;\n        this.name = 'net'\n    }\n    animate() {\n        this.ctx.drawImage(net, (this.frameX * this.width), this.height, this.width, this.height, this.x, this.y, this.width *1.2, this.height*1.2);\n        if (this.incrementer % 20 === 0) {\n            if (this.frameX < 6) {\n                this.frameX++;\n            } if (this.frameX === 6) {\n                this.frameX = 0;\n            }\n        }\n        this.incrementer++\n    }\n}","import Obstacle from \"./obstacles.js\"\nconst crab = new Image()\ncrab.src = \"./images/crab.png\"\n\nexport default class Crab extends Obstacle {\n    constructor(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y) {\n        super(CANVAS_WIDTH, CANVAS_HEIGHT, ctx, x, y);\n        this.width = 128;\n        this.height = 124;\n        this.divisor = 1;\n        this.name = 'crab'\n    }\n    animate() {\n        this.ctx.drawImage(crab, (this.frameX * this.width), this.height, this.width, this.height, this.x, this.y, this.width/2, this.height/2);\n        if (this.incrementer % 10 === 0) {\n            if (this.frameX < 6) {\n                this.frameX++;\n            } if (this.frameX === 6) {\n                this.frameX = 0;\n            }\n        }\n        this.incrementer++\n    }\n\n    updateCrab(){\n        this.x += 3;\n    }\n}","import Henry from \"./henry.js\";\nimport Krill from \"./krill.js\";\nimport Background from \"./background.js\";\nimport Kelp from \"./kelp.js\";\nimport Rock from \"./rock.js\";\nimport Whale from \"./whale.js\";\nimport Trash from \"./trash.js\";\nimport Submarine from \"./submarine.js\";\nimport Collision from \"./collision.js\";\nimport Net from \"./net.js\"\nimport Crab from \"./crab.js\"\n\nconst background = new Image();\nbackground.src = \"./images/background.png\"\n\nconst CANVAS_WIDTH = 800;\nconst CANVAS_HEIGHT = 600;\nlet LAST_TIME = 0;\nconst KRILL_ARR = [];\nconst KELP_ARR = [];\nlet KRILL_TIMER = 0;\nlet KELP_TIMER = 0;\nconst ROCK_ARR = [];\nlet ROCK_TIMER = 0;\nlet WHALE_TIMER = 0;\nconst WHALE_ARR = [];\nlet TRASH_TIMER = 0;\nconst TRASH_ARR = [];\nlet SUB_TIMER = 0;\nconst SUB_ARR = [];\nlet NET_TIMER = 0;\nconst NET_ARR =[];\nlet CRAB_TIMER = 0;\nconst CRAB_ARR = [];\nlet OBSTACLE_TIMER = 0;\nlet CURRENT_OBSTACLES = [];\nlet COLLISION_OBJS =[];\n\nexport default class Game {\n    constructor(ctx){\n        this.ctx = ctx;\n        this.henry = new Henry(CANVAS_WIDTH, CANVAS_HEIGHT, ctx);\n        this.background = new Background(CANVAS_WIDTH, CANVAS_HEIGHT, ctx);\n        this.krillLbs = 0;\n        this.timer = 200;\n        this.winningKrillEaten = 3000;\n        this.collisions=[]\n        this.health = 500;\n        this.timer = 0;\n        this.backgroundAudio = document.getElementById(\"background-music\");\n        this.startAnimation = false;\n        this.gameStarted = false;\n        this.gameOverVar = false;\n        this.addMuteAudioButton();\n        this.addModalButtons()\n        this.startGame();\n        this.pauseGame();\n    }\n\n    startGame(){\n        let display = document.getElementById(\"startImage\")\n        let muteButton = document.getElementById(\"mute\")\n            window.addEventListener('keydown', () => {\n                muteButton.classList.remove(\"hidden\")\n                this.gameStarted = true;\n                this.backgroundAudio.play();\n                display.style.display = \"none\"\n                this.animate(0)\n            }, { once: true })\n    }\n\n    pauseGame() {\n            window.addEventListener('keydown', (e) => {\n                if (e.keyCode == 32) {\n                    if (this.startAnimation === true && this.gameStarted === true) {\n                        this.startAnimation = false;\n                    }else{\n                        this.startAnimation = true;\n                    }\n                } else{\n                    this.startAnimation = true;\n                }\n            })\n    }\n\n\n\n    play(){        \n        this.ctx.font= \"bold 25px copperplate\"\n        this.ctx.fillStyle = \"black\"\n        this.ctx.fillText(\"Health Points:\", 340, 30, 150)\n        this.addHealthColor();\n        this.ctx.fillText(`${this.health}`, 500,30, 150)\n        this.addKrillToEat();\n        this.checkCollisions();\n        this.handleCollisionAnimations();\n        this.endOfGame();\n     }\n\n     addModalButtons(){\n         const openInstructionsButton = document.getElementById(\"open-instructions\")\n         const closeInstructionsButton = document.getElementById(\"close-button\")\n         const modal = document.getElementById(\"modal\")\n\n         openInstructionsButton.addEventListener(\"click\", ()=>{\n            modal.classList.add(\"active\")\n         })\n\n         closeInstructionsButton.addEventListener('click', ()=>{\n            modal.classList.remove(\"active\")\n         })\n     }\n\n     addKrillToEat(){\n         let remainingKrillToEat = this.winningKrillEaten - this.krillLbs\n         this.ctx.fillStyle = \"black\"\n         this.ctx.fillText(\"Eat:\", 20, 30, 50)\n         if(remainingKrillToEat >= 2500){\n             this.ctx.fillStyle = \"red\"\n         } else if(remainingKrillToEat <2500 && remainingKrillToEat > 1000){\n            this.ctx.fillStyle = \"yellow\"\n         }else{\n            this.ctx.fillStyle = \"green\"\n         }\n         this.ctx.fillText(`${remainingKrillToEat}`, 80, 30, 150)\n         this.ctx.fillStyle = \"black\"\n         this.ctx.fillText(\"more lbs of Krill!\", 150, 30, 175)\n     }\n\n     addHealthColor(){\n         if (this.health >= 350) {\n             return this.ctx.fillStyle = \"green\"\n         } else if (this.health > 150 && this.health < 350) {\n             return this.ctx.fillStyle = \"yellow\"\n         } else {\n            return this.ctx.fillStyle = \"red\"\n         }\n     }\n\n     addMuteAudioButton(){\n        let audioButton = document.getElementById('mute')\n        audioButton.addEventListener('click', ()=>{\n            if(audioButton.innerHTML === \"Unmute\"){\n                this.backgroundAudio.play();\n                audioButton.innerHTML = \"Mute\";\n            }else {\n                this.backgroundAudio.pause();\n                audioButton.innerHTML = \"Unmute\";\n            }\n        });\n     }\n     checkCollisions(){\n         if (this.collisions.length) {\n             for (let i = 0; i < this.collisions.length; i++) {\n                 if (this.collisions[i] instanceof Krill) {\n                     this.incrementKrillEaten();\n                     this.increaseHenrySize();\n                     this.incrementHealth();\n                     let krillIdx = KRILL_ARR.indexOf(this.collisions[i])\n                    if (krillIdx >= 0){\n                        KRILL_ARR.splice(krillIdx, 1)\n                    }\n                 } \n                else if(this.collisions[i] instanceof Kelp){\n                    this.collisions.shift();\n                     continue;\n                 } else if(this.collisions[i] instanceof Crab){\n                    this.collisions.shift();\n                    continue;\n                 }\n                 else if (this.collisions[i]) {\n                    this.decrementHealth();\n                    let collisionXHenry = this.henry.x\n                    let collisionXObj = this.collisions[i].x + (this.collisions[i].width)/2\n                     let collisionYHenry = this.henry.y\n                     let collisionYObj = this.collisions[i].y\n\n                     let avgX = (collisionXHenry + collisionXObj)/2\n                     let avgY = (collisionYHenry + collisionYObj)/2\n\n\n                    COLLISION_OBJS.push(new Collision(this.ctx, CANVAS_WIDTH, CANVAS_HEIGHT, avgX, avgY))\n                 }\n                 this.collisions.shift();\n             }\n         }\n     }\n\n     handleCollisionAnimations() {\n       \n        COLLISION_OBJS.forEach((collision)=> {\n            collision.animate();\n            collision.update();\n        })    \n     }\n\n\n     endOfGame(){\n        if(this.gameOver()){\n\n            if (this.winner()) {\n                this.ctx.font = \"bold 50px copperplate\"\n                this.textAlign = \"center\";\n                this.ctx.fillText(\"Congratulations, you won!\", 110, 200, 600)\n                this.ctx.fillText(\"Henry is ready for\", 110, 270, 600)\n                this.ctx.fillText(\"a successful migration!\", 110, 330, 600)\n                this.gameOverVar = true;\n            } else if (this.gameOver()) {\n                this.health = 0;\n                this.ctx.font = \"bold 50px copperplate\"\n                this.ctx.fillText(\"     Oh no, Henry can't migrate! \", 100, 260, 600)\n                this.ctx.fillText(\"Click the button below to try again!\", 100, 300, 640)\n                this.gameOverVar = true;\n            }\n        }\n     }\n\n    increaseHenrySize(){\n        this.henry.henryWidth *= 1.02;\n        this.henry.henryHeight *= 1.02;\n    }\n\n    winner(){\n        if (this.krillLbs >= this.winningKrillEaten ){\n            return true\n        }\n        false;      \n    }\n\n    gameOver(){\n        if(this.krillLbs >= this.winningKrillEaten || this.health <= 0) return true\n        return false;\n    }\n\n    incrementKrillEaten(){\n        this.krillLbs += 150;\n    }\n    \n    decrementHealth(){\n        this.health -= 100\n    }\n\n    incrementHealth(){\n        this.health += 10;\n    }\n\n            \n    animate(timeStamp) {\n        requestAnimationFrame(this.animate.bind(this))\n        if (this.gameOverVar) {\n            window.cancelAnimationFrame(this.animate)\n        }\n        else if (this.startAnimation) {\n            const deltaTime = timeStamp - LAST_TIME;\n            LAST_TIME = timeStamp;\n            this.ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n            this.background.animateBackground();\n            this.background.updatePosition();\n            this.henry.animateHenry();\n            this.addKrill(deltaTime);\n            this.addKelp(deltaTime);\n            this.addRocks(deltaTime);\n            this.addOtherWhales(deltaTime);\n            this.addTrash(deltaTime)\n            this.addSubs(deltaTime);\n            this.addNet(deltaTime);\n            this.addCrab(deltaTime)\n            this.obstacleArray();\n            this.collisionWithObject();\n            this.play();\n\n        } \n        else if (this.startAnimation === false && this.gameStarted === true) {\n            this.ctx.font = \"bold 35px copperplate\"\n            this.ctx.fillStyle = \"#ffca66\"\n            this.ctx.fillText(\"              Game paused\", 170, 280, 600)\n            this.ctx.fillText(\"Press space bar to continue\", 170, 340, 600)\n            window.cancelAnimationFrame(this.animate)\n        } \n\n    }\n         \n       \n\n    obstacleArray() {\n        CURRENT_OBSTACLES = (KRILL_ARR).concat(SUB_ARR).concat(WHALE_ARR).concat(TRASH_ARR).concat(KELP_ARR).concat(ROCK_ARR).concat(NET_ARR)\n        return CURRENT_OBSTACLES\n\n    }\n\n    collisionWithObject() {\n        for (let i = 0; i < CURRENT_OBSTACLES.length; i++) {\n\n            if (CURRENT_OBSTACLES[i].x < 700 && this.henry.x < 700) {\n                if ((CURRENT_OBSTACLES[i].y + (CURRENT_OBSTACLES[i].height / CURRENT_OBSTACLES[i].divisor)) >= this.henry.y\n                    && CURRENT_OBSTACLES[i].y <= this.henry.y + (this.henry.henryHeight / this.henry.divisor)\n                    && (this.henry.x + (this.henry.henryWidth / this.henry.divisor)) >= CURRENT_OBSTACLES[i].x\n                    && this.henry.x <= CURRENT_OBSTACLES[i].x + (CURRENT_OBSTACLES[i].width / CURRENT_OBSTACLES[i].divisor)\n                    && CURRENT_OBSTACLES[i].name !== CURRENT_OBSTACLES[i].name.toUpperCase()) {\n                    CURRENT_OBSTACLES[i].name = CURRENT_OBSTACLES[i].name.toUpperCase();\n                    this.collisions.push(CURRENT_OBSTACLES[i])\n                }\n            }\n\n        }\n        return false;\n    }\n\n\n    addKrill(deltaTime) {\n        let krillInterval = Math.floor(Math.random() * 4500 + 3500);\n        if (KRILL_TIMER > krillInterval) {\n            let randomY = Math.floor(Math.random() * (CANVAS_HEIGHT - 100) + 0)\n            KRILL_ARR.push(new Krill(CANVAS_WIDTH, CANVAS_HEIGHT, this.ctx, -10, randomY))\n            KRILL_TIMER = 0;\n        } else {\n            KRILL_TIMER += deltaTime;\n        }\n        KRILL_ARR.forEach((krill) => {\n            krill.animateKrill();\n            krill.updateKrillPos();\n            if (krill.x > CANVAS_WIDTH + 200) {\n                KRILL_ARR.shift()\n            }\n        })\n    }\n\n    addKelp(deltaTime) {\n        let kelpInterval = Math.floor(Math.random() * 900000);\n        if (KELP_TIMER > kelpInterval) {\n            KELP_ARR.push(new Kelp(CANVAS_WIDTH, CANVAS_HEIGHT, this.ctx, -10, 385))\n            KELP_TIMER = 0;\n        } else {\n            KELP_TIMER += deltaTime;\n        }\n        KELP_ARR.forEach((kelp) => {\n            kelp.animate();\n            kelp.updatePos();\n            if (kelp.x > CANVAS_WIDTH + 300) {\n                KELP_ARR.shift()\n            }\n        })\n    }\n\n    addRocks(deltaTime) {\n        let rockInterval = Math.floor(Math.random() * 6000000);\n        if (ROCK_TIMER > rockInterval) {\n            ROCK_ARR.push(new Rock(CANVAS_WIDTH, CANVAS_HEIGHT, this.ctx, -100, 385))\n            ROCK_TIMER = 0;\n        } else {\n            ROCK_TIMER += deltaTime;\n        }\n        ROCK_ARR.forEach((rock) => {\n            rock.animate();\n            rock.updatePos();\n            if (rock.x > CANVAS_WIDTH) {\n                ROCK_ARR.shift()\n            }\n        })\n    }\n\n    addOtherWhales(deltaTime) {\n        let whaleInterval = Math.floor(Math.random() * 9000000);\n        let randomY = Math.floor(Math.random() * (CANVAS_HEIGHT - 340) + 0)\n        if (WHALE_TIMER > whaleInterval) {\n            WHALE_ARR.push(new Whale(CANVAS_WIDTH, CANVAS_HEIGHT, this.ctx, -30, randomY))\n            WHALE_TIMER = 0;\n        } else {\n            WHALE_TIMER += deltaTime;\n        }\n        WHALE_ARR.forEach((whale) => {\n            whale.animate();\n            whale.updatePos();\n            if (whale.x > CANVAS_WIDTH) {\n                WHALE_ARR.shift()\n            }\n        })\n\n    }\n\n    addTrash(deltaTime) {\n        let trashInterval = Math.floor(Math.random() * 8000000);\n        let randomX = Math.floor(Math.random() * (CANVAS_WIDTH - 600) + 0)\n        let trashIdx = Math.floor(Math.random() * 3)\n        if (TRASH_TIMER > trashInterval) {\n            TRASH_ARR.push(new Trash(CANVAS_WIDTH, CANVAS_HEIGHT, this.ctx, randomX, 0, trashIdx))\n            TRASH_TIMER = 0;\n        } else {\n            TRASH_TIMER += deltaTime;\n        }\n        TRASH_ARR.forEach((trash) => {\n            trash.animate();\n            trash.updateTrashPos();\n            if (trash.x > CANVAS_WIDTH) {\n                TRASH_ARR.shift()\n            }\n        })\n    }\n\n    addSubs(deltaTime) {\n        let subInterval = Math.floor(Math.random() * 50000000);\n        let randomY = Math.floor(Math.random() * (CANVAS_HEIGHT - 375) + 0)\n        if (SUB_TIMER > subInterval) {\n            SUB_ARR.push(new Submarine(CANVAS_WIDTH, CANVAS_HEIGHT, this.ctx, 0, randomY))\n            SUB_TIMER = 0;\n        } else {\n            SUB_TIMER += deltaTime;\n        }\n        SUB_ARR.forEach((sub) => {\n            sub.animate();\n            sub.updatePos();\n            if (sub.x > CANVAS_WIDTH + 100) {\n                SUB_ARR.shift()\n            }\n        })\n    }\n\n    addNet(deltaTime) {\n        let netInterval = Math.floor(Math.random() * 10000000);\n        let randomX = Math.floor(Math.random() * (CANVAS_HEIGHT - 375) + 0)\n        if (NET_TIMER > netInterval) {\n            NET_ARR.push(new Net(CANVAS_WIDTH, CANVAS_HEIGHT, this.ctx, randomX, -5))\n            NET_TIMER = 0;\n        } else {\n            NET_TIMER += deltaTime;\n        }\n        NET_ARR.forEach((net) => {\n            net.animate();\n            net.updatePos();\n            if (net.x > CANVAS_WIDTH + 100) {\n                NET_ARR.shift()\n            }\n        })\n    }\n\n    addCrab(deltaTime) {\n        let crabInterval = Math.floor(Math.random() * 1000000);\n        if (CRAB_TIMER > crabInterval) {\n            CRAB_ARR.push(new Crab(CANVAS_WIDTH, CANVAS_HEIGHT, this.ctx, -100, CANVAS_HEIGHT-75))\n            CRAB_TIMER = 0;\n        } else {\n            CRAB_TIMER += deltaTime;\n        }\n        CRAB_ARR.forEach((crab) => {\n            crab.animate();\n            crab.updateCrab();\n            if (crab.x > CANVAS_WIDTH + 100) {\n                CRAB_ARR.shift()\n            }\n        })\n    }\n\n \n}","import Collision from \"./scripts/collision.js\"\nimport Game from \"./scripts/game.js\"\n\n const canvas = document.getElementById(\"game-canvas\")\n const ctx = canvas.getContext(\"2d\")\n\nlet newGame = new Game(ctx)"],"names":["collision","Image","src","Collision","constructor","ctx","CANVAS_WIDTH","CANVAS_HEIGHT","posX","posY","this","collisionH","collisionW","frameX","incrementer","animate","drawImage","update","henry","Henry","name","henryWidth","henryHeight","divisor","y","x","addListeners","animateHenry","moveHorizontallyLeft","requestAnimationFrame","bind","moveHorizontallyRight","moveVerticallyUp","moveVerticallyDown","window","addEventListener","e","preventDefault","key","krill","Krill","width","height","scroll","animateKrill","updateKrillPos","background","Background","animateBackground","clearRect","fillRect","updatePosition","TIMER","INTERVAL","Math","floor","random","OBSTACLE_ARR","Obstacle","handleObstacle","deltaTime","randomY","push","forEach","obstacle","updatePos","kelp","Kelp","super","rock","Rock","otherWhale","Whale","trash","Trash","num","frame","trashIdx","updateTrashPos","sub","Submarine","net","Net","crab","Crab","updateCrab","LAST_TIME","KRILL_ARR","KELP_ARR","KRILL_TIMER","KELP_TIMER","ROCK_ARR","ROCK_TIMER","WHALE_TIMER","WHALE_ARR","TRASH_TIMER","TRASH_ARR","SUB_TIMER","SUB_ARR","NET_TIMER","NET_ARR","CRAB_TIMER","CRAB_ARR","CURRENT_OBSTACLES","COLLISION_OBJS","document","getElementById","getContext","krillLbs","timer","winningKrillEaten","collisions","health","backgroundAudio","startAnimation","gameStarted","gameOverVar","addMuteAudioButton","addModalButtons","startGame","pauseGame","display","muteButton","classList","remove","play","style","once","keyCode","font","fillStyle","fillText","addHealthColor","addKrillToEat","checkCollisions","handleCollisionAnimations","endOfGame","openInstructionsButton","closeInstructionsButton","modal","add","remainingKrillToEat","audioButton","innerHTML","pause","length","i","incrementKrillEaten","increaseHenrySize","incrementHealth","krillIdx","indexOf","splice","shift","decrementHealth","avgX","avgY","gameOver","winner","textAlign","timeStamp","cancelAnimationFrame","addKrill","addKelp","addRocks","addOtherWhales","addTrash","addSubs","addNet","addCrab","obstacleArray","collisionWithObject","concat","toUpperCase","krillInterval","kelpInterval","rockInterval","whaleInterval","whale","trashInterval","randomX","subInterval","netInterval","crabInterval"],"sourceRoot":""}